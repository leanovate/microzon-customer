buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.5.RELEASE")
    }
}

plugins {
    id "com.jfrog.bintray" version "1.0"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'maven-publish'


group = "de.leanovate.microzon"
version =  '0.1.0'

jar {
    baseName = 'customer'
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:1.2.1.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:1.2.1.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-data-rest:1.2.1.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-actuator:1.2.1.RELEASE")
    compile("mysql:mysql-connector-java:5.1.32")
    compile("com.github.kristofa:brave-impl:2.2.1") {
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    compile("com.github.kristofa:brave-zipkin-spancollector:2.2.1") {
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

task dist(type:Copy) {
    def distDir = System.getenv("DIST_DIR") ?: "../vagrant/dists"

    dependsOn build
    from jar.archivePath
    into distDir
}

task "dist-docker"(type:Copy) {
    def distDir = System.getenv("DIST_DIR") ?: "../docker/customer/dist"

    dependsOn build
    from jar.archivePath
    into distDir
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        dependsOn build
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar.archivePath
        }
    }
}

bintray {
    user = bintray_user
    key = bintray_key
    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        name = 'microzon'
    }
}